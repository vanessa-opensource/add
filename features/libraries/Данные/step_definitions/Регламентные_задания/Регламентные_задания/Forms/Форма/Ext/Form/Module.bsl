&НаКлиенте
Перем КолСекундОжидания;
&НаКлиенте
Перем ДатаНачалаОжидания;
&НаКлиенте
Перем ИмяРегламентногоЗадания;
&НаКлиенте
Перем ИмяМетода;

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-ADD
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-ADD.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Перем Ожидаем;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСИменем(Парам01)","ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСИменем","Дано отменяю все фоновые задания, у которых имя метода от регламентного задания с именем ""РегламентноеЗадание1""", "Отмена выполнения фоновых заданий, у которых имя метода совпадает с именем метода от указанного регламентного задания. В имени задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗадания(Парам01)","ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗадания","Дано отменяю все фоновые задания, у которых имя метода от регламентного задания ""Регламентное задание1""", "Отмена выполнения фоновых заданий, у которых имя метода совпадает с имени метода от указанного регламентного задания. Задание ищется по синониму. В наименования задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетода(Парам01)","ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетода","Дано отменяю все фоновые задания, у которых имя метода ""СлужебныйМодуль.МетодРегламентногоЗадания1""", "Отмена выполнения фоновых заданий, у которых имя метода с указанным именем метода.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВыполняюМетодРегламентногоЗаданияСИменем(Парам01)","ВыполняюМетодРегламентногоЗаданияСИменем","Когда выполняю метод регламентного задания с именем ""РегламентноеЗадание1""","Вызов метода от указанного регламентного задания на сервере. В имени задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВыполняюМетодРегламентногоЗадания(Парам01)","ВыполняюМетодРегламентногоЗадания","Когда выполняю метод регламентного задания ""Регламентное задание1""", "Вызов метода от указанного регламентного задания на сервере. Задание ищется по синониму. В наименовании задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗапускаюРегламентноеЗаданиеСИменем(Парам01)","ЗапускаюРегламентноеЗаданиеСИменем","Когда запускаю регламентное задание с именем ""РегламентноеЗадание1""", "Создание и запуск фонового задания с методом от указанного регламентного задания. В имени задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗапускаюРегламентноеЗадание(Парам01)","ЗапускаюРегламентноеЗадание","Когда запускаю регламентное задание ""Регламентное задание1""", "Создание и запуск фонового задания с методом от указанного регламентного задания. Задание ищется по синониму. В наименовании задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд(Парам01,Парам02)","ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд","И жду завершения регламентного задания с именем ""РегламентноеЗадание1"" в течение 2 секунд", "Ожидать завершения ранее запущенного фонового задания. В имени задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд(Парам01,Парам02)","ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд","И жду завершения регламентного задания ""Регламентное задание1"" в течение 2 секунд", "Ожидать завершения ранее запущенного фонового задания. Задание ищется по синониму. В наименовании задания допустимо использовать шаблонный поиск через *.", "Данные.Регламентные\фоновые задания");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗапускаюФоновоеЗаданиеСМетодом(Парам01)","ЗапускаюФоновоеЗаданиеСМетодом","Когда запускаю фоновое задание с методом ""СлужебныйМодуль.МетодРегламентногоЗадания1""", "Запуск фонового задания с серверным методом из серверного общего модуля.", "Данные.Регламентные\фоновые задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЖдуЗавершенияФоновогоЗаданияСМетодомВТечениеСекунд(Парам01,Парам02)","ЖдуЗавершенияФоновогоЗаданияСМетодомВТечениеСекунд","И жду завершения фонового задания с методом ""СлужебныйМодуль.МетодРегламентногоЗадания1"" в течение 2 секунд", "Ожидать завершения ранее запущенного фонового задания. Поиск задания ведется по имени метода", "Данные.Регламентные\фоновые задания");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Шаги

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда выполняю метод регламентного задания с именем "РегламентноеЗадание1"
//@ВыполняюМетодРегламентногоЗаданияСИменем(Парам01)
Процедура ВыполняюМетодРегламентногоЗаданияСИменем(ИмяРегламентногоЗадания) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ДатаНачала = ТекущаяДата();
	Имя = ВыполняюМетодРегламентногоЗаданияСИменемСервер(ИмяРегламентногоЗадания);
	ДобавитьОписаниеЗаданияВКонтекст(Имя, ДатаНачала);
КонецПроцедуры

&НаКлиенте
//Когда выполняю метод регламентного задания "Регламентное задание1"
//@ВыполняюМетодРегламентногоЗадания(Парам01)
Процедура ВыполняюМетодРегламентногоЗадания(СинонимРегламентногоЗадания) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ДатаНачала = ТекущаяДата();
	Имя = ВыполняюМетодРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания);
	ДобавитьОписаниеЗаданияВКонтекст(Имя, ДатаНачала);
КонецПроцедуры

&НаКлиенте
//Когда запускаю регламентное задание с именем "ИмяИзМетаданных"
//@ЗапускаюРегламентноеЗаданиеСИменем(Парам01)
Процедура ЗапускаюРегламентноеЗаданиеСИменем(ИмяРегламентногоЗадания) Экспорт
	ДатаНачала = ТекущаяДата();
	Имя = ЗапускаюРегламентноеЗаданиеСИменемСервер(ИмяРегламентногоЗадания);
	ДобавитьОписаниеЗаданияВКонтекст(Имя, ДатаНачала);
КонецПроцедуры

&НаКлиенте
//Когда запускаю регламентное задание "Заголовок задания"
//@ЗапускаюРегламентноеЗадание(Парам01)
Процедура ЗапускаюРегламентноеЗадание(СинонимРегламентногоЗадания) Экспорт
	ДатаНачала = ТекущаяДата();
	Имя = ЗапускаюРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания);
	ДобавитьОписаниеЗаданияВКонтекст(Имя, ДатаНачала);
КонецПроцедуры

&НаКлиенте
//И жду завершения регламентного задания с именем "ИмяИзМетаданных" в течение 10 секунд
//@ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд(Парам01,Парам02)
Процедура ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд(ПарамИмяРегламентногоЗадания, КолСекунд) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();

	ИмяРегламентногоЗадания = ПарамИмяРегламентногоЗадания;
	КолСекундОжидания  = КолСекунд;
	ДатаНачалаОжидания = ТекущаяДата();

	ПодключитьОбработчикОжидания("ОбработчикОжидания_РегламентныеЗадания", 1);
КонецПроцедуры

&НаКлиенте
//И жду завершения регламентного задания "Заголовок задания" в течение 10 секунд
//@ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд(Парам01,Парам02)
Процедура ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд(СинонимРегламентногоЗадания, КолСекунд) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();

	ИмяРегламентногоЗадания = НайтиИмяРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания);
	КолСекундОжидания  = КолСекунд;
	ДатаНачалаОжидания = ТекущаяДата();

	ПодключитьОбработчикОжидания("ОбработчикОжидания_РегламентныеЗадания", 1);
КонецПроцедуры

&НаКлиенте
//Дано отменяю все фоновые задания, у которых имя метода от регламентного задания с именем "РегламентноеЗадание1"
//@ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСИменем(Парам01)
Процедура ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСИменем(ИмяРегламентногоЗадания) Экспорт
	ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСИменемСервер(ИмяРегламентногоЗадания);
КонецПроцедуры

&НаКлиенте
//Дано отменяю все фоновые задания, у которых имя метода от регламентного задания "Регламентное задание1"
//@ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗадания(Парам01)
Процедура ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗадания(СинонимРегламентногоЗадания) Экспорт
	ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСервер(СинонимРегламентногоЗадания);	
КонецПроцедуры

&НаКлиенте
//Дано отменяю все фоновые задания, у которых имя метода "СлужебныйМодуль.МетодРегламентногоЗадания1"
//@ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетода(Парам01)
Процедура ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетода(ИмяМетода) Экспорт
	ОтменяюВсеФоновыеЗаданияПоИмениМетода(ИмяМетода);
КонецПроцедуры

&НаКлиенте
//Когда запускаю фоновое задание с методом "СлужебныйМодуль.МетодРегламентногоЗадания1"
//@ЗапускаюФоновоеЗаданиеСМетодом(Парам01)
Процедура ЗапускаюФоновоеЗаданиеСМетодом(ИмяМетода) Экспорт
	ДатаНачала = ТекущаяДата();
	ЗапускаюФоновоеЗаданиеСМетодомСервер(ИмяМетода);
	ДобавитьОписаниеЗаданияПоИмениМетодаВКонтекст(ИмяМетода, ДатаНачала);
КонецПроцедуры

&НаКлиенте
//И жду завершения фонового задания с методом "СлужебныйМодуль.МетодРегламентногоЗадания1" в течение 2 секунд
//@ЖдуЗавершенияФоновогоЗаданияСМетодомВТечениеСекунд(Парам01,Парам02)
Процедура ЖдуЗавершенияФоновогоЗаданияСМетодомВТечениеСекунд(ПарамИмяМетода, КолСекунд) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();

	ИмяМетода = ПарамИмяМетода;
	КолСекундОжидания  = КолСекунд;
	ДатаНачалаОжидания = ТекущаяДата();

	ПодключитьОбработчикОжидания("ОбработчикОжидания_Фоновые_ПоИмениМетода", 1);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВыполняюМетодРегламентногоЗаданияСИменемСервер(ИмяРегламентногоЗадания)
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	ВыполнитьРегламентное(МетаЗадание);
	Возврат МетаЗадание.Имя;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания)
	МетаЗадание = Метаданные.РегламентныеЗадания.Найти(ИмяРегламентногоЗадания);
	Если МетаЗадание = Неопределено Тогда
		ВызватьИсключение "Не найдено регламентное задание по имени " + ИмяРегламентногоЗадания;
	КонецЕсли;
	Возврат МетаЗадание;
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьРегламентное(МетаЗадание)
	Выполнить(МетаЗадание.ИмяМетода + "();");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполняюМетодРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания)
	МетаЗадание = НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания);
	ВыполнитьРегламентное(МетаЗадание);
	Возврат МетаЗадание.Имя;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания)
	РегулярныеВыражения = ВнешниеОбработки.Создать("РегулярныеВыражения");
	Для каждого МетаЗадание Из Метаданные.РегламентныеЗадания Цикл
		Если МетаЗадание.Синоним = СинонимРегламентногоЗадания 
				Или РегулярныеВыражения.СтрокаСоответствуетШаблону(МетаЗадание.Синоним, СинонимРегламентногоЗадания) Тогда
				
			Возврат МетаЗадание;
		КонецЕсли;
	КонецЦикла; 
	
	ВызватьИсключение "Не найдено регламентное задание по синониму " + СинонимРегламентногоЗадания;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиИмяРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания)
	РегулярныеВыражения = ВнешниеОбработки.Создать("РегулярныеВыражения");
	Для каждого МетаЗадание Из Метаданные.РегламентныеЗадания Цикл
		Если МетаЗадание.Синоним = СинонимРегламентногоЗадания 
				Или РегулярныеВыражения.СтрокаСоответствуетШаблону(МетаЗадание.Синоним, СинонимРегламентногоЗадания) Тогда
				
			Возврат МетаЗадание.Имя;
		КонецЕсли;
	КонецЦикла; 
	
	ВызватьИсключение "Не найдено регламентное задание по синониму " + СинонимРегламентногоЗадания;
КонецФункции

&НаСервереБезКонтекста
Функция ЗапускаюРегламентноеЗаданиеСИменемСервер(ИмяРегламентногоЗадания) Экспорт
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	ФЗ = ФоновыеЗадания.Выполнить(МетаЗадание.ИмяМетода, Неопределено, МетаЗадание.Имя);

	Возврат МетаЗадание.Имя;
КонецФункции

&НаСервереБезКонтекста
Функция ЗапускаюРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания) Экспорт
	МетаЗадание = НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания);
	ФЗ = ФоновыеЗадания.Выполнить(МетаЗадание.ИмяМетода, Неопределено, МетаЗадание.Имя);
	Возврат МетаЗадание.Имя;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗапускаюФоновоеЗаданиеСМетодомСервер(ИмяМетода) Экспорт
	ФЗ = ФоновыеЗадания.Выполнить(ИмяМетода, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжидания_РегламентныеЗадания()
	ИмяОбработчика = "ОбработчикОжидания_РегламентныеЗадания";

	Попытка
		ОписаниеЗадания = Контекст[КлючРегламентногоЗадания(ИмяРегламентногоЗадания)];
		Завершено = ФоновоеЗаданиеЗавершеноСервер(ИмяРегламентногоЗадания, ОписаниеЗадания);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Ванесса.ПродолжитьВыполнениеШагов(Истина, 
			Ванесса.СтрШаблон_("Возникла ошибка при ожидании выполнения фонового задания%1%2", Символы.ПС, ОписаниеОшибки));
		Возврат;
	КонецПопытки; 
	
	Если (ТекущаяДата() - ДатаНачалаОжидания) >= КолСекундОжидания Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжидания_Фоновые_ПоИмениМетода()
	ИмяОбработчика = "ОбработчикОжидания_Фоновые_ПоИмениМетода";

	Попытка
		ОписаниеЗадания = Ванесса.ПолучитьЗначениеИзКонтекста(КлючФоновогоЗадания(ИмяМетода));
		Завершено = ФоновоеЗаданиеПоИмениМетодаЗавершеноСервер(ИмяМетода, ОписаниеЗадания);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Ванесса.ПродолжитьВыполнениеШагов(Истина, 
			Ванесса.СтрШаблон_("Возникла ошибка при ожидании выполнения фонового задания%1%2", Символы.ПС, ОписаниеОшибки));
		Возврат;
	КонецПопытки; 
	
	Если (ТекущаяДата() - ДатаНачалаОжидания) >= КолСекундОжидания Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФоновоеЗаданиеЗавершеноСервер(ИмяРегламентногоЗадания, ОписаниеЗадания)
	РасшифровкаОшибки = "Имя регламентного задания - " + ОписаниеЗадания.Имя;
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	Возврат ФоновоеЗаданиеЗавершено(МетаЗадание.ИмяМетода, ОписаниеЗадания, РасшифровкаОшибки);
КонецФункции

&НаСервереБезКонтекста
Функция ФоновоеЗаданиеПоИмениМетодаЗавершеноСервер(ИмяМетода, ОписаниеЗадания)
	РасшифровкаОшибки = "Имя метода для фонового задания - " + ОписаниеЗадания.ИмяМетода;
	Возврат ФоновоеЗаданиеЗавершено(ИмяМетода, ОписаниеЗадания, РасшифровкаОшибки);
КонецФункции

&НаСервереБезКонтекста
Функция ФоновоеЗаданиеЗавершено(ИмяМетода, ОписаниеЗадания, РасшифровкаОшибки)
	МассивФоновых = НайтиФоновые(ИмяМетода, ОписаниеЗадания);
	//ПоказатьДанныеФоновых(МассивФоновых);
	Если МассивФоновых.Количество() = 0 Тогда
		Возврат Истина;		
	ИначеЕсли МассивФоновых.Количество() > 1 Тогда //TODO вернуть
		ВызватьИсключение "Количество фоновых заданий больше одного. " + РасшифровкаОшибки;
	КонецЕсли;
	
	ФЗ = МассивФоновых[0];
	Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Возврат Ложь;
	ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
		Возврат Истина;
	ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ВызватьИсключение "Фоновое задание завершено аварийно. " + РасшифровкаОшибки;
	ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		ВызватьИсключение "Фоновое задание завершено отменено. " + РасшифровкаОшибки;
	Иначе
		ВызватьИсключение "Попали в ветку в ФоновоеЗаданиеЗавершено, в которую не должны были попасть. " + РасшифровкаОшибки;
	КонецЕсли;

КонецФункции

&НаСервереБезКонтекста
Функция НайтиФоновые(ИмяМетода, ОписаниеЗадания)
	Отбор = Новый Структура("ИмяМетода,Начало", ИмяМетода, ОписаниеЗадания.Начало);
	МассивФоновых = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Возврат МассивФоновых;
КонецФункции

&НаСервереБезКонтекста
Процедура ПоказатьДанныеФоновых(МассивФоновых)
	Сообщить("Фоновые задания:");
	Индекс = 0;
	Для каждого ФЗ Из МассивФоновых Цикл
		Индекс = Индекс + 1;
		Сообщить("№ " + Индекс);
		Сообщить("	ИмяМетода " + ФЗ.ИмяМетода);
		Сообщить("	Состояние " + ФЗ.Состояние);
		Сообщить("	Начало " + ФЗ.Начало);
		Сообщить("	Наименование " + ФЗ.Наименование);
		Сообщить("	УникальныйИдентификатор " + ФЗ.УникальныйИдентификатор);
		Сообщить("	Ключ " + ФЗ.Ключ);
		Сообщить("---");
	КонецЦикла; 
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСИменемСервер(ИмяРегламентногоЗадания) Экспорт
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	ОтменяюВсеФоновыеЗаданияПоИмениМетода(МетаЗадание.ИмяМетода);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменяюВсеФоновыеЗаданияУКоторыхИмяМетодаОтРегламентногоЗаданияСервер(СинонимРегламентногоЗадания) Экспорт
	МетаЗадание = НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания);
	ОтменяюВсеФоновыеЗаданияПоИмениМетода(МетаЗадание.ИмяМетода);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменяюВсеФоновыеЗаданияПоИмениМетода(ИмяМетода) Экспорт
	Отбор = Новый Структура("ИмяМетода", ИмяМетода);
	МассивФоновых = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Для каждого ФЗ Из МассивФоновых Цикл
		ФЗ.Отменить();
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОписаниеЗаданияВКонтекст(ИмяРегламентногоЗадания, ДатаНачала)
	ОписаниеЗадания = Новый Структура;
	ОписаниеЗадания.Вставить("Имя", ИмяРегламентногоЗадания);
	ОписаниеЗадания.Вставить("Начало", ДатаНачала);
	Контекст.Вставить(КлючРегламентногоЗадания(ИмяРегламентногоЗадания), ОписаниеЗадания);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОписаниеЗаданияПоИмениМетодаВКонтекст(ИмяМетода, ДатаНачала)
	ОписаниеЗадания = Новый Структура;
	ОписаниеЗадания.Вставить("ИмяМетода", ИмяМетода);
	ОписаниеЗадания.Вставить("Начало", ДатаНачала);
	Ванесса.СохранитьЗначениеВКонтекст(КлючФоновогоЗадания(ИмяМетода), ОписаниеЗадания);
КонецПроцедуры

&НаКлиенте
Функция КлючРегламентногоЗадания(Имя)
	Возврат "ФоновоеЗадание_" + Имя;
КонецФункции

&НаКлиенте
Функция КлючФоновогоЗадания(ИмяМетода)
	Возврат "ФоновоеЗадание_ИмяМетода_" + ИмяМетода;
КонецФункции

#КонецОбласти
