
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-ADD
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;

&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-ADD.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Перем ПеременныеОкружения;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;

	ВсеТесты = Новый Массив;

	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюПеременнуюОкруженияВПеременную(Парам01,Парам02)","ЯЗапоминаюПеременнуюОкруженияВПеременную","Когда Я запоминаю переменную окружения ""PATH"" в переменную ""МояПеременнаяСреды""","","Прочее.Переменные окружения");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюВсеПеременныеОкруженияВПеременную(Парам01)","ЯЗапоминаюВсеПеременныеОкруженияВПеременную","Когда Я запоминаю все переменные окружения в переменную ""МоиПеременныеСреды""","","Прочее.Переменные окружения");
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУстанавливаюПеременнуюОкруженияВЗначение(Парам01,Парам02)","ЯУстанавливаюПеременнуюОкруженияВЗначение","Когда Я устанавливаю переменную окружения ""my_simple_var"" в значение ""my_path""","","Прочее.Переменные окружения");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЧитаюПеременныеОкружения(Парам01,Парам02)","ЯЧитаюПеременныеОкружения","И я читаю переменные окружения","","Прочее.Переменные окружения");

	Возврат ВсеТесты;
КонецФункции

&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции

&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаКлиенте
Функция ПеременныеОкружения()
	
	Если ПеременныеОкружения = Неопределено Тогда
		
		ПеременныеОкружения = Ванесса.Плагин("ПеременныеОкружения");
		
	КонецЕсли;
	
	Возврат ПеременныеОкружения;
	
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт

КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт

КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда Я запоминаю переменную окружения "PATH" в переменную "МояПеременнаяСреды"
//@ЯЗапоминаюПеременнуюОкруженияВПеременную(Парам01,Парам02)
Процедура ЯЗапоминаюПеременнуюОкруженияВПеременную(ИмяПеременнойОкружения, ИмяПеременнойКонтекста) Экспорт
	
	Переменная = ПеременныеОкружения().ЗначениеПеременнойОкружения(ИмяПеременнойОкружения);
	Ванесса.СохранитьЗначениеВКонтекст(ИмяПеременнойКонтекста, Переменная);
	
КонецПроцедуры

&НаКлиенте
//Когда Я запоминаю все переменные окружения в переменную "МоиПеременныеСреды"
//@ЯЗапоминаюВсеПеременныеОкруженияВПеременную(Парам01)
Процедура ЯЗапоминаюВсеПеременныеОкруженияВПеременную(ИмяПеременнойКонтекста) Экспорт
	
	Ванесса.СохранитьЗначениеВКонтекст(ИмяПеременнойКонтекста, ПеременныеОкружения().ВсеПеременныеОкружения());
	
КонецПроцедуры

&НаКлиенте
//И я читаю переменные окружения
//@ЯЧитаюПеременныеОкружения()
Процедура ЯЧитаюПеременныеОкружения() Экспорт
	
	Ванесса.СохранитьЗначениеВКонтекст("ПеременныеОкружения", ПеременныеОкружения().ВсеПеременныеОкружения());
	
КонецПроцедуры

&НаКлиенте
//Когда Я устанавливаю переменную окружения "my_simple_var" в значение "my_path"
//@ЯУстанавливаюПеременнуюОкруженияВЗначение(Парам01,Парам02)
Процедура ЯУстанавливаюПеременнуюОкруженияВЗначение(ИмяПеременнойОкружения, Значение) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры
