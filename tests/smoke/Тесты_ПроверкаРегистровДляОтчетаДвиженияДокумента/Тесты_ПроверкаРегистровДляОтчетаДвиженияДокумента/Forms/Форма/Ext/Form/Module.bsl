#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем СтроковыеУтилиты;
&НаКлиенте
Перем ОтборПоПрефиксу;
&НаКлиенте
Перем ПрефиксОбъектов;
&НаКлиенте
Перем ВыводитьИсключения;
&НаКлиенте
Перем ПропускатьОбъектыСПрефиксомУдалить;
&НаКлиенте
Перем ИсключенияИзПроверок;

#КонецОбласти

#Область ИнтерфейсТестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	СтроковыеУтилиты = КонтекстЯдра.Плагин("СтроковыеУтилиты");
	
	Настройки(КонтекстЯдра, ИмяТеста());
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	Инициализация(КонтекстЯдраПараметр);
	
	Если Не ВыполнятьТест(КонтекстЯдра) Тогда
		Возврат;
	КонецЕсли;
		
	Регистры = Регистры(ПрефиксОбъектов, ОтборПоПрефиксу);
	Для Каждого КлючЗначение Из Регистры Цикл
		Если Не ВыводитьИсключения Тогда
			МассивТестов = УбратьИсключения(КлючЗначение.Значение);
		Иначе
			МассивТестов = КлючЗначение.Значение;
		КонецЕсли;
		Если МассивТестов.Количество() Тогда
			НаборТестов.НачатьГруппу(КлючЗначение.Ключ, Истина);
		КонецЕсли;
		Для Каждого Тест Из МассивТестов Цикл
			ИмяПроцедуры = "ТестДолжен_ПроверитьРегистр";
			ТекстПояснения = НСтр("ru = 'Проверка регистра для отчета движения документа'");
			ИмяТеста = КонтекстЯдра.СтрШаблон_("%1 [%2]", Тест.ПолноеИмя, ТекстПояснения); 
			НаборТестов.Добавить(ИмяПроцедуры, НаборТестов.ПараметрыТеста(Тест.Имя, Тест.ПолноеИмя), ИмяТеста);	
		КонецЦикла;
	КонецЦикла;
				
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаКлиенте
Процедура Настройки(КонтекстЯдра, Знач ПутьНастройки)

	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;
	
	ОтборПоПрефиксу = Ложь;
	ПрефиксОбъектов = "";
	ВыводитьИсключения = Истина;
	ПропускатьОбъектыСПрефиксомУдалить = Ложь;
	ИсключенияИзПроверок = Новый Соответствие;
	ПлагинНастроек = КонтекстЯдра.Плагин("Настройки");
	Объект.Настройки = ПлагинНастроек.ПолучитьНастройку(ПутьНастройки);
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Объект.Настройки) Тогда
		Объект.Настройки = Новый Структура(ПутьНастройки, Неопределено);
		Возврат;
	КонецЕсли;
		
	Если Настройки.Свойство("ВыводитьИсключения") Тогда
		ВыводитьИсключения = Настройки.ВыводитьИсключения;
	КонецЕсли;
	
	Если Настройки.Свойство("ПропускатьОбъектыСПрефиксомУдалить") Тогда
		ПропускатьОбъектыСПрефиксомУдалить = Настройки.ПропускатьОбъектыСПрефиксомУдалить;
	КонецЕсли;
	
	Если Настройки.Свойство("Префикс") Тогда
		ПрефиксОбъектов = ВРег(Настройки.Префикс);
	КонецЕсли;
		
	Если Настройки.Свойство("ОтборПоПрефиксу") Тогда
		ОтборПоПрефиксу = Настройки.ОтборПоПрефиксу;		
	КонецЕсли;
	
	Если Настройки.Свойство("ИсключенияИзПроверок") Тогда
		ИсключенияИзПроверок(Настройки);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ИсключенияИзПроверок(Настройки)

	Для Каждого ИсключенияИзПроверокПоОбъектам Из Настройки.ИсключенияИзпроверок Цикл
		Для Каждого ИсключениеИзПроверок Из ИсключенияИзПроверокПоОбъектам.Значение Цикл
			ИсключенияИзПроверок.Вставить(ВРег(ИсключенияИзПроверокПоОбъектам.Ключ + "." + ИсключениеИзПроверок), Истина); 	
		КонецЦикла;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьРегистр(ИмяРегистра, ПолноеИмяРегистра) Экспорт
	
	ПропускатьТест = ПропускатьТест(ПолноеИмяРегистра);
	
	Результат = ПроверитьРегистрСервер(ПолноеИмяРегистра);
	Если ЕстьОсновнаяФормаСписка(ПолноеИмяРегистра) Тогда
		ФормаСписка = ПолучитьФорму(СтрШаблон("%1.ФормаСписка", ПолноеИмяРегистра));
		Если ФормаСписка.Элементы.Найти("Регистратор") = Неопределено Тогда
			ШаблонОшибки = НСтр("ru = '%1%2 В форме списка нет колонки ""Регистратор""'");
			Результат = ДобавитьТекстОшибки(СтроковыеУтилиты, Результат, ШаблонОшибки);	
		КонецЕсли;
	КонецЕсли;
	
	Если Результат <> "" И ПропускатьТест.Пропустить Тогда
		Утверждения.ПропуститьТест(ТекстСообщения(ИмяРегистра, Результат));
	Иначе
		Утверждения.Проверить(Результат = "", ТекстСообщения(ИмяРегистра, Результат));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьРегистрСервер(ПолноеИмяРегистра)
	
	Результат = "";
	СтроковыеУтилиты = СтроковыеУтилиты();
	РежимОбычноеПриложение = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение;
	
	Регистр = Метаданные.НайтиПоПолномуИмени(ПолноеИмяРегистра);
	
	Если Регистр.ИспользоватьСтандартныеКоманды = Истина Тогда
		ШаблонОшибки = НСтр("ru = '%1%2 Включено использование стандартных команд'");
		Результат = ДобавитьТекстОшибки(СтроковыеУтилиты, Результат, ШаблонОшибки);
	КонецЕсли;
	
	Если Метаданные.ОсновнойРежимЗапуска = РежимОбычноеПриложение Тогда
		Если Регистр.ОсновнаяФормаСписка = Неопределено Тогда
			ШаблонОшибки = НСтр("ru = '%1%2 Не указана основная форма списка'");
			Результат = ДобавитьТекстОшибки(СтроковыеУтилиты, Результат, ШаблонОшибки);
		ИначеЕсли Регистр.ОсновнаяФормаСписка.ТипФормы = Метаданные.СвойстваОбъектов.ТипФормы.Обычная Тогда
			ШаблонОшибки = НСтр("ru = '%1%2 Основная форма списка - обычная'");
			Результат = ДобавитьТекстОшибки(СтроковыеУтилиты, Результат, ШаблонОшибки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПропускатьТест(ИмяРегистра)

	Результат = Новый Структура;
	Результат.Вставить("ТекстСообщения", "");
	Результат.Вставить("Пропустить", Ложь);
	
	Если ИсключенИзПроверок(ВРег(ИмяРегистра)) Тогда
		ШаблонСообщения = НСтр("ru = 'Объект ""%1"" исключен из проверки.'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяРегистра);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
	
	Если ПропускатьОбъектыСПрефиксомУдалить = Истина И СтрНайти(ВРег(ИмяРегистра), ".УДАЛИТЬ") > 0 Тогда
		ШаблонСообшения = НСтр("ru = 'Объект ""%1"" исключен из проверки, префикс ""Удалить""'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообшения, ИмяРегистра);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
		
	Возврат Результат;

КонецФункции 

&НаКлиенте
Функция ТекстСообщения(ИмяРегистра, Результат)

	ШаблонСообщения = НСтр("ru = 'Для регистра ""%1"" есть замечания:%2.'");
	ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяРегистра, Результат);
	
	Возврат ТекстСообщения;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДобавитьТекстОшибки(СтроковыеУтилиты, Знач Результат, Знач ШаблонОшибки)	
	Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
	Возврат СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель);	
КонецФункции

&НаКлиенте
Функция УбратьИсключения(МассивТестов)

	Результат = Новый Массив;
	
	Для Каждого Тест Из МассивТестов Цикл
		Если Не ИсключенИзПроверок(Тест.ПолноеИмя) Тогда
			Результат.Добавить(Тест);
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ИсключенИзПроверок(ПолноеИмяМетаданных)
	
	Результат = Ложь;
	МассивСтрокИмени = СтроковыеУтилиты.РазложитьСтрокуВМассивПодстрок(ПолноеИмяМетаданных, ".");
	ИслючениеВсехОбъектов = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1.*", МассивСтрокИмени[0]);
	
	Если ИсключенияИзПроверок.Получить(ВРег(ПолноеИмяМетаданных)) <> Неопределено
	 Или ИсключенияИзПроверок.Получить(ВРег(ИслючениеВсехОбъектов)) <> Неопределено Тогда
		Результат = Истина;	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьОсновнаяФормаСписка(ПолноеИмяРегистра)
	Регистр = Метаданные.НайтиПоПолномуИмени(ПолноеИмяРегистра);
	ТипФормыУправляемая = Метаданные.СвойстваОбъектов.ТипФормы.Управляемая;
	Возврат Регистр.ОсновнаяФормаСписка <> Неопределено И Регистр.ОсновнаяФормаСписка.ТипФормы = ТипФормыУправляемая;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьРеквизитИлиСвойствоОбъекта(Объект, ИмяРеквизита) Экспорт
	
	КлючУникальности   = Новый УникальныйИдентификатор;
	СтруктураРеквизита = Новый Структура(ИмяРеквизита, КлючУникальности);
	ЗаполнитьЗначенияСвойств(СтруктураРеквизита, Объект);
	
	Возврат СтруктураРеквизита[ИмяРеквизита] <> КлючУникальности;
	
КонецФункции

&НаСервереБезКонтекста
Функция СтроковыеУтилиты()
	Возврат ВнешниеОбработки.Создать("СтроковыеУтилиты");	
КонецФункции 

&НаКлиенте
Функция ИмяТеста()
	
	Если Не ЗначениеЗаполнено(Объект.ИмяТеста) Тогда
		Объект.ИмяТеста = ИмяТестаНаСервере();
	КонецЕсли;
	
	Возврат Объект.ИмяТеста;
	
КонецФункции

&НаСервере
Функция ИмяТестаНаСервере()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

&НаКлиенте
Функция ВыполнятьТест(КонтекстЯдра)
	
	ВыполнятьТест = Ложь;
	Настройки(КонтекстЯдра, ИмяТеста());
	Настройки = Объект.Настройки;
	
	Если Не ЕстьПодсистемаБСП("ОтчетОДвиженияхДокумента") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат ВыполнятьТест;
	КонецЕсли;
		
	Если ТипЗнч(Настройки) = Тип("Структура") И Настройки.Свойство("Используется") Тогда
		ВыполнятьТест = Настройки.Используется;	
	КонецЕсли;
	
	Возврат ВыполнятьТест;

КонецФункции

&НаСервереБезКонтекста
Функция ЕстьПодсистемаБСП(ИмяПодсистемы)
	
	Результат = Ложь;
	
	СтандартныеПодсистемы = Метаданные.Подсистемы.Найти("СтандартныеПодсистемы");
	Если СтандартныеПодсистемы <> Неопределено Тогда
		Результат = СтандартныеПодсистемы.Подсистемы.Найти(ИмяПодсистемы) <> Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция Регистры(ПрефиксОбъектов, ОтборПоПрефиксу)

	ПодчинениеРегистратору = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору;
	
	Регистры = Новый Соответствие;
	Регистры.Вставить("РегистрыСведений", Новый Массив);
	Регистры.Вставить("РегистрыНакопления", Новый Массив);
	Регистры.Вставить("РегистрыБухгалтерии", Новый Массив);
	Регистры.Вставить("РегистрыРасчета", Новый Массив);
	
	Для Каждого КлючЗначение Из Регистры Цикл
		Для Каждого Регистр Из Метаданные[КлючЗначение.Ключ] Цикл
			Если ОтборПоПрефиксу И Не ИмяСодержитПрефикс(Регистр.Имя, ПрефиксОбъектов) Тогда
				Продолжить;
			КонецЕсли;
			Если Метаданные.РегистрыСведений.Содержит(Регистр) И Регистр.РежимЗаписи <> ПодчинениеРегистратору Тогда
				Продолжить;
			КонецЕсли;
			СтруктураРегистра = Новый Структура;
			СтруктураРегистра.Вставить("Имя", Регистр.Имя);
			СтруктураРегистра.Вставить("Синоним", Регистр.Синоним);
			СтруктураРегистра.Вставить("ПолноеИмя", Регистр.ПолноеИмя());
			КлючЗначение.Значение.Добавить(СтруктураРегистра);
		КонецЦикла;	
	КонецЦикла;
	
	Возврат Регистры;

КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция ИмяСодержитПрефикс(Имя, Префикс)
	
	Если Не ЗначениеЗаполнено(Префикс) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДлинаПрефикса = СтрДлина(Префикс);
	Возврат СтрНайти(ВРег(Лев(Имя, ДлинаПрефикса)), Префикс) > 0;
	
КонецФункции

#КонецОбласти