#Область ОписаниеПеременных

Перем КонтекстЯдра;

Перем Ожидаем;
Перем ИтераторМетаданных;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ИнтерфейсТестирования

Функция КлючНастройки() Экспорт
	Возврат "РежимУправленияБлокировкойДанных";
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт

	КонтекстЯдра = КонтекстЯдраПараметр;
	
	// Подключаем плагин для текучих утверждений
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	
	ЗагрузитьНастройки();
	
	Если Не НужноВыполнятьТест() Тогда 
		Возврат;
	КонецЕсли;

	// Подключаем Итератор
	ИтераторМетаданных = КонтекстЯдра.Плагин("ИтераторМетаданных");
	ИтераторМетаданных.Инициализация(КонтекстЯдра); // Сбрасываем настройки Итератора
	ИтераторМетаданных.ДополнятьЗависимымиОбъектами = Истина;
	// Исключим коллекции, у элементов которых нет свойства РежимУправленияБлокировкойДанных
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.Перечисления);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.Обработки);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.Отчеты);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.ЖурналыДокументов);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.НумераторыДокументов);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.КритерииОтбора);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.HTTPСервисы);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.ОбщиеРеквизиты);
	ИтераторМетаданных.ИсключаемыеМетаданные.Добавить(Метаданные.WSСсылки);

КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	Если Метаданные.РежимУправленияБлокировкойДанных = Метаданные.СвойстваОбъектов.РежимУправленияБлокировкойДанныхПоУмолчанию.Управляемый Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализируем плагины
	Инициализация(КонтекстЯдраПараметр);
	
	Если Не НужноВыполнятьТест() Тогда 
		Возврат;
	КонецЕсли;

	// Из итератора получаем ДеревоЗначений с описанием метаданных
	ДеревоМетаданных = ИтераторМетаданных.ДеревоМетаданных();

	// Проходим по дереву, по корневым узлам
	Для Каждого КорневаяСтрока Из ДеревоМетаданных.Строки Цикл

		Родитель = КорневаяСтрока.ОбъектМетаданных;
		
		// Начинаем группу тестов по разделу метаданных
		ИмяНабораТестов = "Проверка режима блокировки данных " + Родитель;
		НаборТестов.НачатьГруппу(ИмяНабораТестов);
		
		Сообщение = "Пропускаем из-за исключения по виду метаданных - " + 
			КонтекстЯдра.СтрШаблон_(ШаблонПредставления(), "Вид метаданных", Родитель);
		Если ДобавитьТестИсключениеЕслиЕстьВИсключаемойКоллекции(Родитель, Настройки.ИсключенияПоВидуМетаданных, 
					Сообщение, НаборТестов) Тогда
			Продолжить;
		КонецЕсли;

		// Проходим по составу раздела метаданных
		Для Каждого СтрокаМетаданных Из КорневаяСтрока.Строки Цикл

			ТекОбъектМетаданных = СтрокаМетаданных.ОбъектМетаданных;
			ПолноеИмяОбъекта = ТекОбъектМетаданных.ПолноеИмя();
		
			Сообщение = "Пропускаем из-за исключения по имени метаданного - " + 
				КонтекстЯдра.СтрШаблон_(ШаблонПредставления(), Родитель, ТекОбъектМетаданных.Имя);
			Если ДобавитьТестИсключениеЕслиЕстьВИсключаемойКоллекции(ТекОбъектМетаданных.Имя, Настройки.ИсключенияПоИмениМетаданных, 
						Сообщение, НаборТестов) Тогда
				Продолжить;
			КонецЕсли;
			
			ЭтоВебСервис = Найти(ПолноеИмяОбъекта, "WebСервис")=1;

			Если ЭтоВебСервис Тогда
				// Для веб-сервиса режим блокировки проверяем у его операций
				Для Каждого Операция Из ТекОбъектМетаданных.Операции Цикл
					ПараметрыТеста = НаборТестов.ПараметрыТеста(ПолноеИмяОбъекта, Родитель, Операция.Имя);
					ЗаголовокТеста = "" + ПолноеИмяОбъекта + "." + Операция.Имя + " - " + ИмяНабораТестов;
					НаборТестов.Добавить("Тест_ПроверитьРежимБлокировкиОбъекта", ПараметрыТеста, ЗаголовокТеста);
				КонецЦикла;
			Иначе
				ПараметрыТеста = НаборТестов.ПараметрыТеста(ПолноеИмяОбъекта, Родитель, "");
				ЗаголовокТеста = ПолноеИмяОбъекта + " - " + ИмяНабораТестов;
				НаборТестов.Добавить("Тест_ПроверитьРежимБлокировкиОбъекта", ПараметрыТеста, ЗаголовокТеста);
			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Тесты

Процедура Тест_ПроверитьРежимБлокировкиОбъекта(ПолноеИмяМетаданного, Родитель, ИмяОперации) Экспорт
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданного);
	Если ЗначениеЗаполнено(ИмяОперации) Тогда
		ОбъектМетаданных = ОбъектМетаданных.Операции.Найти(ИмяОперации);
	КонецЕсли;
	РежимПроверен = ОбъектМетаданных.РежимУправленияБлокировкойДанных = Метаданные.РежимУправленияБлокировкойДанных;
	ТекстОшибки = "Режим блокировки объекта метаданных не соответствует корневому режиму конфигурации!";
	Ожидаем.Что(РежимПроверен, ТекстОшибки).ЕстьИстина();

КонецПроцедуры

Процедура Тест_ПропуститьМетаданное(Знач Сообщение) Экспорт
	КонтекстЯдра.ПропуститьТест(Сообщение);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗаголовокОбщаяЧасть()
	Возврат "Проверка режима управления блокировкой данных";
КонецФункции

Функция ШаблонПредставления()
	Возврат ЗаголовокОбщаяЧасть() + " %1: %2";
КонецФункции

Функция ДобавитьТестИсключениеЕслиЕстьВИсключаемойКоллекции(Знач ЧтоИщем, Знач КоллекцияДляПоиска, Знач Сообщение,
			Знач НаборТестов)
			
	Если КонтекстЯдра.ЕстьВИсключаемойКоллекции(ЧтоИщем, КоллекцияДляПоиска) Тогда
		КонтекстЯдра.Отладка(Сообщение);
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Сообщение);
		
		НаборТестов.Добавить("Тест_ПропуститьМетаданное", ПараметрыТеста, Сообщение);
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

#Область Настройки

Процедура ЗагрузитьНастройки()
	Если ЗначениеЗаполнено(Настройки) Тогда
		Возврат;
	КонецЕсли;

	ПлагинНастройки = КонтекстЯдра.Плагин("Настройки");
	ПлагинНастройки.Инициализация(КонтекстЯдра);
	
	Настройки = ПлагинНастройки.ПолучитьНастройку(КлючНастройки());
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", Истина);
	Результат.Вставить("ИсключенияПоВидуМетаданных", Новый Массив);
	Результат.Вставить("ИсключенияПоИмениМетаданных", Новый Массив);
	
	Возврат Результат;
КонецФункции

Функция НужноВыполнятьТест()
	
	ЗагрузитьНастройки();
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	КлючНастройки = КлючНастройки();
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Используется", ВыполнятьТест) Тогда

			Возврат ВыполнятьТест = Истина;	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

Процедура ЗаписатьИнформациюВЖурналРегистрации(Знач Комментарий)
	ЗаписьЖурналаРегистрации(ИмяСобытия(), УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры
  
Процедура ЗаписатьПредупреждениеВЖурналРегистрацииСервер(Комментарий)
	ЗаписьЖурналаРегистрации(ИмяСобытия(), УровеньЖурналаРегистрации.Предупреждение, , , Комментарий);
КонецПроцедуры
	
Процедура ЗаписатьОшибкуВЖурналРегистрации(Комментарий)
	ЗаписьЖурналаРегистрации(ИмяСобытия(), УровеньЖурналаРегистрации.Ошибка, , , Комментарий);
КонецПроцедуры

Функция ИмяСобытия()
	Возврат "VanessaADD.Дымовые.ПроверкаРежимаБлокировки"; // по аналогии с другими тестами
КонецФункции


#КонецОбласти
