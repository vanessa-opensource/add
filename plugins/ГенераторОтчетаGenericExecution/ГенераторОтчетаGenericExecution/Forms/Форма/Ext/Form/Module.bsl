#Область ОписаниеПеременных

&НаКлиенте
Перем ТипыУзловДереваТестов;

&НаКлиенте
Перем ИконкиУзловДереваТестов;

&НаКлиенте
Перем СостоянияТестов;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Процедура Инициализация(КонтекстЯдра) Экспорт
	
	ПостроительДереваТестов = КонтекстЯдра.Плагин("ПостроительДереваТестов");
	
	ТипыУзловДереваТестов = ПостроительДереваТестов.Объект.ТипыУзловДереваТестов;
	ИконкиУзловДереваТестов = ПостроительДереваТестов.Объект.ИконкиУзловДереваТестов;
	СостоянияТестов = КонтекстЯдра.Объект.СостоянияТестов;
	
КонецПроцедуры

&НаКлиенте
Функция ОписаниеПлагина(КонтекстЯдра, ВозможныеТипыПлагинов) Экспорт
	Возврат ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов);
КонецФункции

&НаКлиенте
Функция СоздатьОтчет(КонтекстЯдра, РезультатыТестирования) Экспорт
	
	Отчет = Новый Соответствие;
	
	ОбработатьРезультатТестирования(Отчет, РезультатыТестирования, "");
	
	Возврат Отчет;
	
КонецФункции

&НаКлиенте
Процедура Экспортировать(Отчет, ПутьКОтчету, ОписаниеОповещения = Неопределено) Экспорт
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПутьКОтчету);
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	GenericExecution_ЗаписатьОтчет(ЗаписьXML, Отчет);
	
	ЗаписьXML.Закрыть();
	
	Если ОписаниеОповещения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбъектПлагина

&НаСервере
Функция ОбъектПлагина()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервере
Функция ОписаниеПлагинаНаСервере(Знач ВозможныеТипыПлагинов)
	Возврат ОбъектПлагина().ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов);
КонецФункции

#КонецОбласти

#Область ФорматGenericExecution

&НаКлиенте
Процедура GenericExecution_ЗаписатьОтчет(ЗаписьXML, Отчет)
	
	ВерсияФормата = "1";
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("testExecutions");
	ЗаписьXML.ЗаписатьАтрибут("version", ВерсияФормата);
	
	Для Каждого ФайлТеста Из Отчет Цикл
		GenericExecution_ЗаписатьФайлТеста(ЗаписьXML, ФайлТеста);
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура GenericExecution_ЗаписатьФайлТеста(ЗаписьXML, ФайлТеста)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("file");
	ЗаписьXML.ЗаписатьАтрибут("path", ФайлТеста.Ключ);
	
	Для Каждого РезультатТеста Из ФайлТеста.Значение Цикл
		GenericExecution_ЗаписатьРезультатТеста(ЗаписьXML, РезультатТеста);
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура GenericExecution_ЗаписатьРезультатТеста(ЗаписьXML, РезультатТеста)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("testCase");
	ЗаписьXML.ЗаписатьАтрибут("name", РезультатТеста.Имя);
	ЗаписьXML.ЗаписатьАтрибут("duration", XMLСтрока(РезультатТеста.Длительность));
	
	Если РезультатТеста.Состояние <> СостоянияТестов.Пройден Тогда
		GenericExecution_ЗаписатьОшибкуТеста(ЗаписьXML, РезультатТеста);
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура GenericExecution_ЗаписатьОшибкуТеста(ЗаписьXML, РезультатТеста)
	
	Если РезультатТеста.Состояние = СостоянияТестов.Сломан Тогда
		ИмяЭлемента = "failure";
		
	ИначеЕсли РезультатТеста.Состояние = СостоянияТестов.НеРеализован Тогда
		ИмяЭлемента = "skipped";
		
	Иначе
		ИмяЭлемента = "error";
		
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяЭлемента);
	ЗаписьXML.ЗаписатьАтрибут("message", РезультатТеста.Сообщение);
	ЗаписьXML.ЗаписатьТекст(РезультатТеста.ПодробноеСообщение);
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбработатьРезультатТестирования(Отчет, РезультатыТестирования, ПутьКонтейнера)
	
	Если РезультатыТестирования.Тип = ТипыУзловДереваТестов.Контейнер Тогда
		ОбработатьКонтейнер(Отчет, РезультатыТестирования, ПутьКонтейнера);
		
	Иначе
		ОбработатьЭлемент(Отчет, РезультатыТестирования, ПутьКонтейнера);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКонтейнер(Отчет, Контейнер, ПутьКонтейнера)
	
	Если ПустаяСтрока(ПутьКонтейнера) Тогда
		ТекущийПуть = Контейнер.Имя;
	Иначе
		ТекущийПуть = СтрШаблон("%1/%2", ПутьКонтейнера, Контейнер.Имя);
	КонецЕсли;
	
	Для Каждого Строка Из Контейнер.Строки Цикл
		ОбработатьРезультатТестирования(Отчет, Строка, ТекущийПуть);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЭлемент(Отчет, Элемент, ПутьКонтейнера)
	
	ПутьТеста = СтрШаблон("%1/%2", ПутьКонтейнера, Элемент.Путь);
	
	РезультатТеста = НовыйРезультатТеста();
	РезультатТеста.Имя = Элемент.ИмяМетода;
	РезультатТеста.Длительность = Элемент.ВремяОкончания - Элемент.ВремяНачала;
	РезультатТеста.Состояние = Элемент.Состояние;
	РезультатТеста.Сообщение = Элемент.Сообщение;
	РезультатТеста.ПодробноеСообщение = Элемент.ПодробноеСообщение;
	
	ДобавитьРезультатТеста(Отчет, ПутьТеста, РезультатТеста);
	
КонецПроцедуры

&НаКлиенте
Функция НовыйРезультатТеста()
	
	Результат = Новый Структура;
	Результат.Вставить("Имя", "");
	Результат.Вставить("Длительность", 0);
	Результат.Вставить("Состояние", Неопределено);
	Результат.Вставить("Сообщение", Неопределено);
	Результат.Вставить("ПодробноеСообщение", Неопределено);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьРезультатТеста(Отчет, ПутьТеста, РезультатТеста)
	
	НаборРезультатов = Отчет.Получить(ПутьТеста);
	
	Если НаборРезультатов = Неопределено Тогда
		
		НаборРезультатов = Новый Массив;
		Отчет.Вставить(ПутьТеста, НаборРезультатов);
		
	КонецЕсли;
	
	НаборРезультатов.Добавить(РезультатТеста);
	
КонецПроцедуры

#КонецОбласти
