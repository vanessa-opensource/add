
//////////////////////////////////////////////////////////////////
//
// Простой хелпер создания временных файлов и каталогов
//
//////////////////////////////////////////////////////////////////

//#Использовать logos

Перем мВременныеФайлы;
//Перем Лог;

// { Plugin interface
Функция ОписаниеПлагина(КонтекстЯдра, ВозможныеТипыПлагинов) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Тип", ВозможныеТипыПлагинов.Утилита);
	Результат.Вставить("Идентификатор", Метаданные().Имя);
	Результат.Вставить("Представление", "ВременныеФайлы");
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
КонецПроцедуры
// } Plugin interface

/////////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция НовоеИмяФайла(Знач Расширение = "tmp") Экспорт
	
	ИмяВремФайла = ПолучитьИмяВременногоФайла(Расширение);
	мВременныеФайлы.Добавить(ИмяВремФайла);
	
	Возврат ИмяВремФайла;
	
КонецФункции

Функция СоздатьФайл(Знач Расширение = "tmp") Экспорт

	ИмяФайла = НовоеИмяФайла(Расширение);
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.ANSI);
	ЗаписьТекста.Закрыть();
	Возврат ИмяФайла;

КонецФункции

Функция СоздатьКаталог_(Знач Расширение = "tmp") Экспорт

	ИмяФайла = НовоеИмяФайла(Расширение);
	СоздатьКаталог(ИмяФайла);
	
	Возврат ИмяФайла;

КонецФункции

Процедура Удалить() Экспорт
	
	КрайнийИндекс = мВременныеФайлы.Количество()-1;
	Для Сч = 0 По КрайнийИндекс Цикл
		
		Индекс = КрайнийИндекс-Сч;
		ИмяВременногоФайла = мВременныеФайлы[Индекс];
		Если БезопасноУдалитьФайл(ИмяВременногоФайла) Тогда
			мВременныеФайлы.Удалить(Индекс);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция УдалитьФайл(Знач Путь) Экспорт
	Возврат БезопасноУдалитьФайл(Путь);
КонецФункции

Функция БезопасноУдалитьФайл(Знач Путь) Экспорт
	
	Попытка
		УдалитьФайлы(Путь);
		Возврат Истина;
	Исключение
		ТекстОшибки = "Попытка удаления "+Путь+" закончилась неудачей, по причине "+ОписаниеОшибки();
		УдаляемыйФайл = Новый Файл(Путь);
		Если УдаляемыйФайл.ЭтоФайл() и УдаляемыйФайл.ПолучитьТолькоЧтение() Тогда
			УдаляемыйФайл.УстановитьТолькоЧтение(Ложь);
			Попытка
				УдалитьФайлы(Путь);
				Возврат Истина;
			Исключение
				//Лог.Предупреждение(ТекстОшибки);
			 КонецПопытки;
		Иначе
			//Лог.Предупреждение(ТекстОшибки);
		КонецЕсли; 
	КонецПопытки;

	Возврат Ложь;
	
КонецФункции

мВременныеФайлы = Новый Массив;
//Лог = Логирование.ПолучитьЛог("oscript.app.tempfiles");